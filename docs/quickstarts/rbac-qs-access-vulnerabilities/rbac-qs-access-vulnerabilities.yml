# Additional info: https://docs.openshift.com/container-platform/4.9/web_console/creating-quick-start-tutorials.html
# Template from https://github.com/patternfly/patternfly-quickstarts/blob/main/packages/dev/src/quickstarts-data/yaml/template.yaml
# See quick start instructions here https://github.com/RedHatInsights/quickstarts/tree/main/docs/quickstarts
metadata:
  name: rbac-qs-access-vulnerabilities
  # you can add additional metadata here
  # instructional: true
spec:
  displayName: Configuring granular access to vulnerabilities for my security team
  durationMinutes: 10
  # Optional type section, will display as a tile on the card
  type:
    text: Quick start
    # 'blue' | 'cyan' | 'green' | 'orange' | 'purple' | 'red' | 'grey'
    color: grey
  # - The icon defined as a base64 value. Example flow:
  # 1. Find an .svg you want to use, like from here: https://www.patternfly.org/v4/guidelines/icons/#all-icons
  # 2. Upload the file here and encode it (output format - plain text): https://base64.guru/converter/encode/image
  # 3. compose - `icon: data:image/svg+xml;base64,<base64 string from step 2>`
  # - If empty string (icon: ''), will use a default rocket icon
  # - If set to null (icon: ~) will not show an icon
  icon: ''
  prerequisites:
    - You are an Organization Administrator or have **User Access administrator** permissions
    - Two groups of users needing different permissions
  description: |-
    Configuring access to a service only for specific users 
  introduction: |-
    This quick start shows you how to configure different sets of permissions to services for two groups in the Hybrid Cloud Console (the console).  
    
    You can use this workflow when you want your teams to have different levels of access. In this example, you’ll give your security team access only to vulnerabilities so they can handle CVEs, while you’ll give your Linux team access to manage all other resources and services in the console.
 
    You can use this example workflow to customize access to any role within **User Access** and modify the **Default access** group.
  tasks:
    - title: Removing the Vulnerability administrator role from the **Default access** group
      description: |-
        Edit the **Default access** group and remove the groups or roles that you don’t want all users to have. (If the **Default access** group was previously modified, then it’s called the **Custom default access** group.)

        Because user access in the console is additive, removing the roles initially allows you to add only the permissions after as you want by default.

        NOTE: You can undo any changes you make to the **Default access** group by clicking **Restore to default** on the **Groups** page.

        1. Click the [Settings icon]{{highlight SettingsMenu}} to open **Settings**.
        
        2. Click **User Access** > **Groups**.
        
        3. Click the **Default access** group. (If you previously modified this group, it's called **Custom default access**.)
        
        4. In the **Roles** tab, select all the roles in the list.
        
        5. Click&nbsp;&nbsp;<i class="fas fa-ellipsis-v"></i> (more options) > **Remove** at the top of the list to remove all permissions from all users in your organization who are not Organization Administrators.
        [Organization Administrator permissions are configured in the **Default admin access** group.]{{admonition note}}

        6. Click **Remove roles** to confirm.

        7. If you are modifying the **Default access** group for the first time, select the checkbox in the warning and click **Continue** to confirm. 
        
        The **Default access** group has no roles assigned, and the group is now called **Custom default access**. Users will only have permissions from custom groups, if they already exist. User access in the console is additive, meaning that each user has the default access permissions, plus permissions from any other groups they are assigned.

      # optional - the task's Check your work module
      review:
        instructions: |-
          - Go to **Groups** > **Custom default access** and confirm that there are no roles assigned to the group.

        failedTaskHelp: Try completing the steps again.

    - title: Creating a group that can view and resolve CVEs
      description: |-
        Create a new group named *Security Team* and add the **Vulnerability administrator** and **Vulnerability viewer** roles, then assign specific team members to the group. 
        
        The users in this group will only have permissions to use the vulnerabilities service to view and resolve Common Vulnerability and Exposures (CVEs).
        
        1. Click **Groups** > **Create group**.

        2. Enter a group name (for example, *Security Team*) and description, and click **Next**.

        3. Find and select the **Vulnerability administrator** and **Vulnerability viewer** roles to the group, and click **Next**.
            - You can quickly find a role by filtering by role name.

        4. Add the members of your security team to the group by selecting the checkboxes for those users. Click **Next**.
            - You can quickly find users by filtering by username, email, or status.

        5. Review the group details and click **Submit** to create the group.
        
        Now the users in the *Security Team* group can view and resolve CVEs, but can’t perform any other actions in the console.

        To learn more, see the [User Access Configuration Guide for Role-based Access Control (RBAC)](https://access.redhat.com/documentation/en-us/red_hat_hybrid_cloud_console/2022/html/user_access_configuration_guide_for_role-based_access_control_rbac/index).

        
      # optional - the task's Check your work module
      review:
        instructions: |-
          - Go to **User Access** > **Groups** and confirm that *Security Team* has 2 roles assigned. Click *Security Team* to check that the 2 roles are **Vulnerability administrator** and **Vulnerability viewer**.


        failedTaskHelp: Try completing the steps again.
      # optional - the task's success and failure messages
      summary:
        success: Shows a success message in the task header
        failed: Shows a failed message in the task header

    - title: Creating a group with administrative permissions
      description: |-
        Now create a new group for your Linux team – who require permissions to manage resources in the console – and assign specific team members to the group. 
        
        In contrast to the users in the *Security Team* group, the users in this group will be able to make changes in the console.
        
        1. Click **Groups** > **Create group**.

        2. Enter a group name (for example, *Linux Team*) and description, and click **Next**.

        3. Add the roles you want these users to have. For example, to grant administrative access to all services and resources for these users, select all roles in the list.

        4. Add team members to the group. Select the checkboxes for those users and click **Next**.
        [Organization Administrators inherit all administrative roles by default, so you don’t need to add the Organization Administrator to the group.]{{admonition note}}

        5. Review the group details and click **Submit** to create the group.
        
        You now have a new group called *Linux Team* that can view and edit resources in the console.
      
        
      # optional - the task's Check your work module
      review:
        instructions: |-
          - Log in to the console as a member of the *Security Team* group, and verify that you can only access the vulnerability service.
          - Log in to the console as a member of the *Linux Team* group, and verify that you can view and edit resources in other services.


        failedTaskHelp: Try completing the steps again.
      # optional - the task's success and failure messages
      summary:
        success: Shows a success message in the task header
        failed: Shows a failed message in the task header



  conclusion: |-
    Congratulations! You have now configured granular permissions by service for two teams in your organization.

    After completing this quick start:
    - Users in the *Security Team* group can only view and resolve CVEs, but cannot perform any other actions in the console. 
    - Users in the *Linux Team* group can view and edit all resources and services in the console.

    A few tips:
    - User access in the console is additive, meaning that each user has the default access permissions, plus permissions from any other groups they are assigned.
    - You can undo any changes you make to the Default access group by clicking **Restore to default** on the **Groups** page.

    From here, you can use this example as a guideline to create additional groups with access to specific services.

    **Learn more:**
      - See the [User Access Configuration Guide for Role-based Access Control (RBAC)](https://access.redhat.com/documentation/en-us/red_hat_hybrid_cloud_console/2022/html/user_access_configuration_guide_for_role-based_access_control_rbac/index) 
      - See the [Red Hat Insights documentation](https://access.redhat.com/documentation/en-us/red_hat_insights/2022) for information about using the vulnerability service, including:
          - [Assessing and Monitoring Security Vulnerabilities on RHEL Systems](https://access.redhat.com/documentation/en-us/red_hat_insights/2022/html-single/assessing_and_monitoring_security_vulnerabilities_on_rhel_systems/index)
          - [Remediating Security Exposures Using the Vulnerability Service and Ansible Playbooks](https://access.redhat.com/documentation/en-us/red_hat_insights/2022/html-single/remediating_security_exposures_using_the_vulnerability_service_and_ansible_playbooks/index)
          - [Generating Vulnerability Service Reports](https://access.redhat.com/documentation/en-us/red_hat_insights/2022/html-single/generating_vulnerability_service_reports/index) 
